add_header X-Frame-Options "SAMEORIGIN" always;

add_header X-Content-Type-Options nosniff;

server_tokens off;

upstream webapi {
    server webapi:80;
}

upstream transmitter {
    server transmitter:80;
}

include /etc/nginx/compression.conf;

map $http_connection $connection_upgrade {
    "~*Upgrade" $http_connection;
    default keep-alive;
}

server {
    listen 80;

    location = /robots.txt {
        root /etc/nginx;
    }

    location /api {
        proxy_pass http://webapi;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    Host $host;
        proxy_redirect      off;
    }

    location /hub {
      # App server url
      proxy_pass http://transmitter;

      # Configuration for WebSockets
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_cache off;
      # WebSockets were implemented after http/1.0
      proxy_http_version 1.1;

      # Configuration for ServerSentEvents
      proxy_buffering off;

      # Configuration for LongPolling or if your KeepAliveInterval is longer than 60 seconds
      proxy_read_timeout 100s;

      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    root /usr/src/app/www/frontend/;

    location ~ /index.html|.*\.json$ {
      expires -1;        
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    }

    location ~ .*\.css$|.*\.js$ {               
      add_header Cache-Control 'max-age=31449600'; # one year        
    }

    location / {
        try_files $uri $uri/ /index.html =404;
        add_header Cache-Control 'max-age=86400'; # one day
    }
}